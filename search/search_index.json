{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"utuby YouTube's API is annoying to work with, and has lots of limitations. utuby is a simple script for downloading Youtube comments without using the Youtube API - No API rate limits. No restrictions. Extremely fast. Source Link PyPI: https://pypi.org/project/utuby/ Repository: https://github.com/santhoshse7en/utuby/ Documentation: https://santhoshse7en.github.io/utuby_docs/ A Glance Download it by clicking the green download button here on Github. You only need to parse specific YouTube URL as argument. >>> from utuby.utuby import youtube >>> url = 'https://www.youtube.com/watch?v=xjQFi-HP7po' >>> youtube = youtube(url)","title":"Home"},{"location":"#utuby","text":"YouTube's API is annoying to work with, and has lots of limitations. utuby is a simple script for downloading Youtube comments without using the Youtube API - No API rate limits. No restrictions. Extremely fast. Source Link PyPI: https://pypi.org/project/utuby/ Repository: https://github.com/santhoshse7en/utuby/ Documentation: https://santhoshse7en.github.io/utuby_docs/","title":"utuby"},{"location":"#a-glance","text":"Download it by clicking the green download button here on Github. You only need to parse specific YouTube URL as argument. >>> from utuby.utuby import youtube >>> url = 'https://www.youtube.com/watch?v=xjQFi-HP7po' >>> youtube = youtube(url)","title":"A Glance"},{"location":"about/","text":"utuby YouTube's API is annoying to work with, and has lots of limitations. utuby is a simple script for downloading Youtube comments without using the Youtube API - No API rate limits. No restrictions. Extremely fast. Contributing Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change. Please make sure to update tests as appropriate. License MIT","title":"About"},{"location":"about/#utuby","text":"YouTube's API is annoying to work with, and has lots of limitations. utuby is a simple script for downloading Youtube comments without using the Youtube API - No API rate limits. No restrictions. Extremely fast.","title":"utuby"},{"location":"about/#contributing","text":"Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change. Please make sure to update tests as appropriate.","title":"Contributing"},{"location":"about/#license","text":"MIT","title":"License"},{"location":"installation/","text":"Installation This part of the documentation covers the installation of utuby. The first step to using any software package is getting it properly installed. Dependencies beautifulsoup4 requests lxml cssselect vaderSentiment textblob pandas Distribute & Pip Installing utuby is simple with pip . $ pip install utuby Get the Code utuby is actively developed on GitHub, where the code is always available . You can clone the public repository: git clone git://github.com/santhoshse7en/utuby.git Once you have a copy of the source, you can embed it in your Python package, or install it into your site-packages easily: $ pip install -r requirements.txt $ python setup.py install Feel free to give our testing suite a shot: $ python twitter/utuby.py","title":"Installation"},{"location":"installation/#installation","text":"This part of the documentation covers the installation of utuby. The first step to using any software package is getting it properly installed.","title":"Installation"},{"location":"installation/#dependencies","text":"beautifulsoup4 requests lxml cssselect vaderSentiment textblob pandas","title":"Dependencies"},{"location":"installation/#distribute-pip","text":"Installing utuby is simple with pip . $ pip install utuby","title":"Distribute &amp; Pip"},{"location":"installation/#get-the-code","text":"utuby is actively developed on GitHub, where the code is always available . You can clone the public repository: git clone git://github.com/santhoshse7en/utuby.git Once you have a copy of the source, you can embed it in your Python package, or install it into your site-packages easily: $ pip install -r requirements.txt $ python setup.py install Feel free to give our testing suite a shot: $ python twitter/utuby.py","title":"Get the Code"},{"location":"usage/","text":"Quickstart Eager to get started? This page gives a good introduction in how to get started with utuby. This assumes you already have utuby installed. If you do not, head over to the Installation section. Building a YouTube source Source objects are an abstraction of online multi-media content websites YouTube Building a Source will extract its Channel Name Subscribers Published Date Description Views Likes Dislikes Total comments Comments Final Sentiment Score YouTube Comments DataFrame Download it by clicking the green download button here on Github. You only need to parse specific YouTube URL as argument. >>> from utuby.utuby import youtube >>> url = 'https://www.youtube.com/watch?v=xjQFi-HP7po' >>> youtube = youtube(url) Directory of youtube class >>> print(dir(youtube)) Extracting YouTube Channel Name >>> youtube.channel_name 'Fully' Examples Calculating Sentiment Scores for extracted YouTube Comments >>> youtube.final_sentiment_scores {'neu': 0.769, 'neg': 0.051, 'pos': 0.178, 'compound': 0.0} Youtube Comments DataFrame >>> youtube.youtube_comments_df.head()","title":"Usage"},{"location":"usage/#quickstart","text":"Eager to get started? This page gives a good introduction in how to get started with utuby. This assumes you already have utuby installed. If you do not, head over to the Installation section. Building a YouTube source Source objects are an abstraction of online multi-media content websites YouTube Building a Source will extract its Channel Name Subscribers Published Date Description Views Likes Dislikes Total comments Comments Final Sentiment Score YouTube Comments DataFrame Download it by clicking the green download button here on Github. You only need to parse specific YouTube URL as argument. >>> from utuby.utuby import youtube >>> url = 'https://www.youtube.com/watch?v=xjQFi-HP7po' >>> youtube = youtube(url) Directory of youtube class >>> print(dir(youtube))","title":"Quickstart"},{"location":"usage/#extracting-youtube-channel-name","text":">>> youtube.channel_name 'Fully'","title":"Extracting YouTube Channel Name"},{"location":"usage/#examples-calculating-sentiment-scores-for-extracted-youtube-comments","text":">>> youtube.final_sentiment_scores {'neu': 0.769, 'neg': 0.051, 'pos': 0.178, 'compound': 0.0}","title":"Examples Calculating Sentiment Scores for extracted YouTube Comments"},{"location":"usage/#youtube-comments-dataframe","text":">>> youtube.youtube_comments_df.head()","title":"Youtube Comments DataFrame"}]}